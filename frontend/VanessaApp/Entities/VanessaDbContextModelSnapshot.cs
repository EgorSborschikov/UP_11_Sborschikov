// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VanessaApp.Entities;

#nullable disable

namespace VanessaApp.Entities
{
    [DbContext(typeof(VanessaDbContext))]
    partial class VanessaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VanessaApp.Entities.animal_type", b =>
                {
                    b.Property<int>("IDAnimalType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDAnimalType"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("IDAnimalType")
                        .HasName("animal_type_pkey");

                    b.ToTable("animal_type");
                });

            modelBuilder.Entity("VanessaApp.Entities.auth", b =>
                {
                    b.Property<int>("IDAuth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDAuth"));

                    b.Property<string>("Login")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("IDAuth")
                        .HasName("auth_pkey");

                    b.ToTable("auth");
                });

            modelBuilder.Entity("VanessaApp.Entities.branch", b =>
                {
                    b.Property<int>("IDBranch")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"branches_IDBrabch_seq\"'::regclass)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("IDCity")
                        .HasColumnType("integer");

                    b.HasKey("IDBranch")
                        .HasName("branches_pkey");

                    b.HasIndex("IDCity");

                    b.ToTable("branches");
                });

            modelBuilder.Entity("VanessaApp.Entities.city", b =>
                {
                    b.Property<int>("IDCity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDCity"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IDCity")
                        .HasName("cities_pkey");

                    b.ToTable("cities");
                });

            modelBuilder.Entity("VanessaApp.Entities.client", b =>
                {
                    b.Property<int>("IDClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"clinets_IDClient_seq\"'::regclass)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Lastname")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("Name")
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)");

                    b.Property<string>("Surname")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("IDClient")
                        .HasName("clinets_pkey");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("VanessaApp.Entities.coupon", b =>
                {
                    b.Property<int>("IDCoupon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDCoupon"));

                    b.Property<int>("IDClients")
                        .HasColumnType("integer");

                    b.Property<int>("IDEmployee")
                        .HasColumnType("integer");

                    b.HasKey("IDCoupon")
                        .HasName("coupons_pkey");

                    b.HasIndex("IDClients");

                    b.HasIndex("IDEmployee");

                    b.ToTable("coupons");
                });

            modelBuilder.Entity("VanessaApp.Entities.employee", b =>
                {
                    b.Property<int>("IDEmployee")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("IDAuth")
                        .HasColumnType("integer");

                    b.Property<int>("IDBranch")
                        .HasColumnType("integer");

                    b.Property<int>("IDPosition")
                        .HasColumnType("integer");

                    b.Property<string>("LastName")
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("PassportData")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Surname")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.HasKey("IDEmployee")
                        .HasName("employees_pkey");

                    b.HasIndex("IDAuth");

                    b.HasIndex("IDBranch");

                    b.HasIndex("IDPosition");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("VanessaApp.Entities.online_order", b =>
                {
                    b.Property<int>("IDOnlineOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDOnlineOrder"));

                    b.Property<int>("IDClient")
                        .HasColumnType("integer");

                    b.Property<int>("IDPharmacyProduct")
                        .HasColumnType("integer");

                    b.Property<int>("IDPickupPoint")
                        .HasColumnType("integer");

                    b.HasKey("IDOnlineOrder")
                        .HasName("online_orders_pkey");

                    b.HasIndex("IDClient");

                    b.HasIndex("IDPharmacyProduct");

                    b.HasIndex("IDPickupPoint");

                    b.ToTable("online_orders");
                });

            modelBuilder.Entity("VanessaApp.Entities.patient_by_coupon", b =>
                {
                    b.Property<int>("IDReception")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDReception"));

                    b.Property<string>("Complaints")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Conclusions")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Custody")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("IDAnimalType")
                        .HasColumnType("integer");

                    b.Property<int>("IDCoupon")
                        .HasColumnType("integer");

                    b.Property<int>("IDPharmacyProduct")
                        .HasColumnType("integer");

                    b.Property<bool>("RegularInspection")
                        .HasColumnType("boolean");

                    b.HasKey("IDReception")
                        .HasName("patient_by_coupon_pkey");

                    b.HasIndex("IDAnimalType");

                    b.HasIndex("IDCoupon");

                    b.HasIndex("IDPharmacyProduct");

                    b.ToTable("patient_by_coupon");
                });

            modelBuilder.Entity("VanessaApp.Entities.payment", b =>
                {
                    b.Property<int>("IDPayment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDPayment"));

                    b.Property<int>("IDPaymentMethod")
                        .HasColumnType("integer");

                    b.Property<int>("IDReception")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("IDPayment")
                        .HasName("payments_pkey");

                    b.HasIndex("IDPaymentMethod");

                    b.HasIndex("IDReception");

                    b.ToTable("payments");
                });

            modelBuilder.Entity("VanessaApp.Entities.payments_method", b =>
                {
                    b.Property<int>("IDPaymentMethod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDPaymentMethod"));

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character(50)")
                        .IsFixedLength();

                    b.HasKey("IDPaymentMethod")
                        .HasName("payments_methods_pkey");

                    b.ToTable("payments_methods");
                });

            modelBuilder.Entity("VanessaApp.Entities.pharmacy_product", b =>
                {
                    b.Property<int>("IDPharmacyProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDPharmacyProduct"));

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character(50)")
                        .IsFixedLength();

                    b.HasKey("IDPharmacyProduct")
                        .HasName("pharmacy_products_pkey");

                    b.ToTable("pharmacy_products");
                });

            modelBuilder.Entity("VanessaApp.Entities.pickup_point", b =>
                {
                    b.Property<int>("IDPickupPoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDPickupPoints"));

                    b.Property<int>("IDCity")
                        .HasColumnType("integer");

                    b.HasKey("IDPickupPoints")
                        .HasName("pickup_points_pkey");

                    b.HasIndex("IDCity");

                    b.ToTable("pickup_points");
                });

            modelBuilder.Entity("VanessaApp.Entities.position", b =>
                {
                    b.Property<int>("IDPosition")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDPosition"));

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IDPosition")
                        .HasName("positions_pkey");

                    b.ToTable("positions");
                });

            modelBuilder.Entity("VanessaApp.Entities.salary", b =>
                {
                    b.Property<int>("IDSalaries")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDSalaries"));

                    b.Property<int>("IDEmployee")
                        .HasColumnType("integer");

                    b.Property<decimal>("Salaries")
                        .HasColumnType("money");

                    b.HasKey("IDSalaries")
                        .HasName("salaries_pkey");

                    b.HasIndex("IDEmployee");

                    b.ToTable("salaries");
                });

            modelBuilder.Entity("VanessaApp.Entities.sale_of_pharmacy_product", b =>
                {
                    b.Property<int>("IDSale")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDSale"));

                    b.Property<int>("IDClient")
                        .HasColumnType("integer");

                    b.Property<int>("IDEmployee")
                        .HasColumnType("integer");

                    b.Property<int>("IDPharmacyProduct")
                        .HasColumnType("integer");

                    b.HasKey("IDSale")
                        .HasName("sale_of_pharmacy_products_pkey");

                    b.HasIndex("IDClient");

                    b.HasIndex("IDEmployee");

                    b.HasIndex("IDPharmacyProduct");

                    b.ToTable("sale_of_pharmacy_products");
                });

            modelBuilder.Entity("VanessaApp.Entities.branch", b =>
                {
                    b.HasOne("VanessaApp.Entities.city", "IDCityNavigation")
                        .WithMany("branches")
                        .HasForeignKey("IDCity")
                        .IsRequired()
                        .HasConstraintName("branches_IDCity_fkey");

                    b.Navigation("IDCityNavigation");
                });

            modelBuilder.Entity("VanessaApp.Entities.coupon", b =>
                {
                    b.HasOne("VanessaApp.Entities.client", "IDClientsNavigation")
                        .WithMany("coupons")
                        .HasForeignKey("IDClients")
                        .IsRequired()
                        .HasConstraintName("coupons_IDClients_fkey");

                    b.HasOne("VanessaApp.Entities.employee", "IDEmployeeNavigation")
                        .WithMany("coupons")
                        .HasForeignKey("IDEmployee")
                        .IsRequired()
                        .HasConstraintName("coupons_IDEmployee_fkey");

                    b.Navigation("IDClientsNavigation");

                    b.Navigation("IDEmployeeNavigation");
                });

            modelBuilder.Entity("VanessaApp.Entities.employee", b =>
                {
                    b.HasOne("VanessaApp.Entities.auth", "IDAuthNavigation")
                        .WithMany("employees")
                        .HasForeignKey("IDAuth")
                        .IsRequired()
                        .HasConstraintName("employees_IDAuth_fkey");

                    b.HasOne("VanessaApp.Entities.branch", "IDBranchNavigation")
                        .WithMany("employees")
                        .HasForeignKey("IDBranch")
                        .IsRequired()
                        .HasConstraintName("employees_IDBranch_fkey");

                    b.HasOne("VanessaApp.Entities.position", "IDPositionNavigation")
                        .WithMany("employees")
                        .HasForeignKey("IDPosition")
                        .IsRequired()
                        .HasConstraintName("employees_IDPosition_fkey");

                    b.Navigation("IDAuthNavigation");

                    b.Navigation("IDBranchNavigation");

                    b.Navigation("IDPositionNavigation");
                });

            modelBuilder.Entity("VanessaApp.Entities.online_order", b =>
                {
                    b.HasOne("VanessaApp.Entities.client", "IDClientNavigation")
                        .WithMany("online_orders")
                        .HasForeignKey("IDClient")
                        .IsRequired()
                        .HasConstraintName("online_orders_IDClient_fkey");

                    b.HasOne("VanessaApp.Entities.pharmacy_product", "IDPharmacyProductNavigation")
                        .WithMany("online_orders")
                        .HasForeignKey("IDPharmacyProduct")
                        .IsRequired()
                        .HasConstraintName("online_orders_IDPharmacyProduct_fkey");

                    b.HasOne("VanessaApp.Entities.pickup_point", "IDPickupPointNavigation")
                        .WithMany("online_orders")
                        .HasForeignKey("IDPickupPoint")
                        .IsRequired()
                        .HasConstraintName("online_orders_IDPickupPoint_fkey");

                    b.Navigation("IDClientNavigation");

                    b.Navigation("IDPharmacyProductNavigation");

                    b.Navigation("IDPickupPointNavigation");
                });

            modelBuilder.Entity("VanessaApp.Entities.patient_by_coupon", b =>
                {
                    b.HasOne("VanessaApp.Entities.animal_type", "IDAnimalTypeNavigation")
                        .WithMany("patient_by_coupons")
                        .HasForeignKey("IDAnimalType")
                        .IsRequired()
                        .HasConstraintName("patient_by_coupon_IDAnimalType_fkey");

                    b.HasOne("VanessaApp.Entities.coupon", "IDCouponNavigation")
                        .WithMany("patient_by_coupons")
                        .HasForeignKey("IDCoupon")
                        .IsRequired()
                        .HasConstraintName("patient_by_coupon_IDCoupon_fkey");

                    b.HasOne("VanessaApp.Entities.pharmacy_product", "IDPharmacyProductNavigation")
                        .WithMany("patient_by_coupons")
                        .HasForeignKey("IDPharmacyProduct")
                        .IsRequired()
                        .HasConstraintName("patient_by_coupon_IDPharmacyProduct_fkey");

                    b.Navigation("IDAnimalTypeNavigation");

                    b.Navigation("IDCouponNavigation");

                    b.Navigation("IDPharmacyProductNavigation");
                });

            modelBuilder.Entity("VanessaApp.Entities.payment", b =>
                {
                    b.HasOne("VanessaApp.Entities.payments_method", "IDPaymentMethodNavigation")
                        .WithMany("payments")
                        .HasForeignKey("IDPaymentMethod")
                        .IsRequired()
                        .HasConstraintName("payments_IDPaymentMethod_fkey");

                    b.HasOne("VanessaApp.Entities.patient_by_coupon", "IDReceptionNavigation")
                        .WithMany("payments")
                        .HasForeignKey("IDReception")
                        .IsRequired()
                        .HasConstraintName("payments_IDReception_fkey");

                    b.Navigation("IDPaymentMethodNavigation");

                    b.Navigation("IDReceptionNavigation");
                });

            modelBuilder.Entity("VanessaApp.Entities.pickup_point", b =>
                {
                    b.HasOne("VanessaApp.Entities.city", "IDCityNavigation")
                        .WithMany("pickup_points")
                        .HasForeignKey("IDCity")
                        .IsRequired()
                        .HasConstraintName("pickup_points_IDCity_fkey");

                    b.Navigation("IDCityNavigation");
                });

            modelBuilder.Entity("VanessaApp.Entities.salary", b =>
                {
                    b.HasOne("VanessaApp.Entities.employee", "IDEmployeeNavigation")
                        .WithMany("salaries")
                        .HasForeignKey("IDEmployee")
                        .IsRequired()
                        .HasConstraintName("salaries_IDEmployee_fkey");

                    b.Navigation("IDEmployeeNavigation");
                });

            modelBuilder.Entity("VanessaApp.Entities.sale_of_pharmacy_product", b =>
                {
                    b.HasOne("VanessaApp.Entities.client", "IDClientNavigation")
                        .WithMany("sale_of_pharmacy_products")
                        .HasForeignKey("IDClient")
                        .IsRequired()
                        .HasConstraintName("sale_of_pharmacy_products_IDClient_fkey");

                    b.HasOne("VanessaApp.Entities.employee", "IDEmployeeNavigation")
                        .WithMany("sale_of_pharmacy_products")
                        .HasForeignKey("IDEmployee")
                        .IsRequired()
                        .HasConstraintName("sale_of_pharmacy_products_IDEmployee_fkey");

                    b.HasOne("VanessaApp.Entities.pharmacy_product", "IDPharmacyProductNavigation")
                        .WithMany("sale_of_pharmacy_products")
                        .HasForeignKey("IDPharmacyProduct")
                        .IsRequired()
                        .HasConstraintName("sale_of_pharmacy_products_IDPharmacyProduct_fkey");

                    b.Navigation("IDClientNavigation");

                    b.Navigation("IDEmployeeNavigation");

                    b.Navigation("IDPharmacyProductNavigation");
                });

            modelBuilder.Entity("VanessaApp.Entities.animal_type", b =>
                {
                    b.Navigation("patient_by_coupons");
                });

            modelBuilder.Entity("VanessaApp.Entities.auth", b =>
                {
                    b.Navigation("employees");
                });

            modelBuilder.Entity("VanessaApp.Entities.branch", b =>
                {
                    b.Navigation("employees");
                });

            modelBuilder.Entity("VanessaApp.Entities.city", b =>
                {
                    b.Navigation("branches");

                    b.Navigation("pickup_points");
                });

            modelBuilder.Entity("VanessaApp.Entities.client", b =>
                {
                    b.Navigation("coupons");

                    b.Navigation("online_orders");

                    b.Navigation("sale_of_pharmacy_products");
                });

            modelBuilder.Entity("VanessaApp.Entities.coupon", b =>
                {
                    b.Navigation("patient_by_coupons");
                });

            modelBuilder.Entity("VanessaApp.Entities.employee", b =>
                {
                    b.Navigation("coupons");

                    b.Navigation("salaries");

                    b.Navigation("sale_of_pharmacy_products");
                });

            modelBuilder.Entity("VanessaApp.Entities.patient_by_coupon", b =>
                {
                    b.Navigation("payments");
                });

            modelBuilder.Entity("VanessaApp.Entities.payments_method", b =>
                {
                    b.Navigation("payments");
                });

            modelBuilder.Entity("VanessaApp.Entities.pharmacy_product", b =>
                {
                    b.Navigation("online_orders");

                    b.Navigation("patient_by_coupons");

                    b.Navigation("sale_of_pharmacy_products");
                });

            modelBuilder.Entity("VanessaApp.Entities.pickup_point", b =>
                {
                    b.Navigation("online_orders");
                });

            modelBuilder.Entity("VanessaApp.Entities.position", b =>
                {
                    b.Navigation("employees");
                });
#pragma warning restore 612, 618
        }
    }
}
